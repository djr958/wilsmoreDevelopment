.row {

    @mixin clearfix;

    &--t-padding {
        padding-top: 80px;
    }

    &--gutters {
        margin-right: -65px;
    }
    
    &--gutters-large {
        margin-right: -100px;
    }

    &--gutters > div {
        padding-right: 65px;
    }

    &--gutters-large > div {
        padding-right: 100px;
    }

    &--gutters-small > div {
        padding-right: 45px;
    }

    &--gutters-small {
        margin-right: -45px;
    }

    &__b-margin-until-medium {
        margin-bottom: 1rem;
    }

    /*
        The 'float' takes the element out of the flow of the page so
        the row element thinks there's nothing inside itself, it
        allows elements lower on the page in (it end up with those
        as it's background).
        The float element needs to be 'cleared'. Use '&::after' to put content
        after the other content of the row (in a mixin as @mixin clearfix).
    */
    @mixin atMedium {

        &__b-margin-until-medium {
            margin-bottom: 0;
        }
        
        &__medium-4 {
            float: left;
            width: 33.33%;
        }

        &__medium-4--larger {
            width: 37%;
        }

        &__medium-6 {
            float: left;
            width: 50%;
        }

        &__medium-8 {
            float: left;
            width: 66.66%;
        }

        &__medium-8--smaller {
            width: 63%;
        }  
        
        &__medium-12 {
            float: left;
            width: 100%
        }
    }

    @mixin atLarge {

        &__b-margin-until-large {
            margin-bottom: 0;
        }
        
        &__large-4 {
            float: left;
            width: 33.33%;
        }

        &__large-4--larger {
            width: 37%;
        }

        &__large-6 {
            float: left;
            width: 50%;
        }

        &__large-8 {
            float: left;
            width: 66.66%;
        }

        &__large-8--smaller {
            width: 63%;
        }  
        
        &__large-12 {
            float: left;
            width: 100%
        }
    }

    /* Begin Equal Height Rules */
    /*
        Modernizr parses the css files and will spot the '.flexbox' and determine whether
        the browser supports it or not.
    */
    .flexbox &--equal-height-at-medium {
        @mixin atMedium {
            display: flex;
        }

        /* 
            The '&' gives us the '&--equal-height-at-medium' selector so we're looking
            for the divs within it (the three columns).
        */
        & > div {
            /* Stop being floated and start using flex. */
            float: none;
            display: flex;
        }
    }

    .flexbox &--equal-height-at-large {
        @mixin atLarge {
            display: flex;
        }

        & > div {
            float: none;
            display: flex;
        }
    }    
}